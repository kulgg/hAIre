---
import type { ScoredSentence } from "../data/applications";

export interface Props {
	title: string;
	sentences: {
		positiveSentences: ScoredSentence[];
		negativeSentences: ScoredSentence[];
	};
}

const { title, sentences } = Astro.props;
---

<div class="underline py-2">{title}</div>
<ul class="gap-1 grid grid-cols-2">
	{
		sentences.positiveSentences.map((x) => (
			<li
				class={`flex justify-start items-center gap-1 text-sm col-start-1 col-span-1`}
			>
				<div class="text-base">• {x.text}</div>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					class={`w-6 h-6 ${
						x.score >= 0.4
							? "text-green-600"
							: x.score >= 0.3
							? "text-green-400"
							: "text-green-300"
					}`}
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						d="M2.25 18L9 11.25l4.306 4.307a11.95 11.95 0 015.814-5.519l2.74-1.22m0 0l-5.94-2.28m5.94 2.28l-2.28 5.941"
					/>
				</svg>
			</li>
		))
	}
	{
		sentences.negativeSentences.map((x) => (
			<li
				class={`flex justify-start items-center gap-1 text-sm col-start-2 col-span-1`}
			>
				<div class="text-base">• {x.text}</div>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					class={`w-6 h-6 ${
						x.score >= 0.4
							? "text-red-600"
							: x.score >= 0.3
							? "text-red-400"
							: "text-red-300"
					}`}
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						d="M2.25 6L9 12.75l4.286-4.286a11.948 11.948 0 014.306 6.43l.776 2.898m0 0l3.182-5.511m-3.182 5.51l-5.511-3.181"
					/>
				</svg>
			</li>
		))
	}
</ul>
